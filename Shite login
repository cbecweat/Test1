<?php
error_reporting(0);
session_start();
require('db.php');
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

require 'phpmailer/src/Exception.php';
require 'phpmailer/src/PHPMailer.php';
require 'phpmailer/src/SMTP.php';

// Load Composer's autoloader
require 'vendor/autoload.php';

// Check if form is submitted
if (isset($_POST['submit'])) {
    $ip_address = getIpAddr();

    // Check if there are too many failed login attempts within 30 seconds
    $time_limit = time() - 30;
    $query4 = "SELECT COUNT(*) AS total_count FROM loginlogs WHERE IpAddress='$ip_address' AND TryTime > FROM_UNIXTIME($time_limit)";
    $result = mysqli_query($con, $query4);
    $check_login_row = mysqli_fetch_assoc($result);
    $total_count = $check_login_row['total_count'];

    if ($total_count >= 3) {
        $msg = "Too many failed login attempts. Please login after 30 seconds.";
    } else {
        $username = mysqli_real_escape_string($con, $_POST['username']);
        $password = mysqli_real_escape_string($con, $_POST['password']);

        // Checking if user exists in the database
        $query5 = "SELECT * FROM `users` WHERE username='$username'";
        $result = mysqli_query($con, $query5);

        if (mysqli_num_rows($result) == 1) {
            $user_data = mysqli_fetch_assoc($result);
            $stored_password = $user_data['password'];
            $salt = $user_data['salt'];
			
			// Hash the password with salt
            $hashed_password = hash('sha256', $password . $salt);

            // Compare hashed password from the database with the provided hashed password
            if ($hashed_password === $stored_password) {
                $_SESSION['IS_LOGIN'] = 'yes';
                $_SESSION['username'] = $username;

                // Reset login attempts for this IP
                mysqli_query($con, "DELETE FROM loginlogs WHERE IpAddress='$ip_address'");

                header("Location: index.php");
                exit();
            } else {
                // Insert login attempt with timestamp
                mysqli_query($con, "INSERT INTO loginlogs (IpAddress, TryTime) VALUES ('$ip_address', NOW())");

                $msg = "Please enter valid login details.";
             }
        } else {
            $msg = "User does not exist.";
        }
    }
}

// Function to get the client's IP address
function getIpAddr(){
    if (!empty($_SERVER['HTTP_CLIENT_IP'])){
        $ipAddr = $_SERVER['HTTP_CLIENT_IP'];
    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){
        $ipAddr = $_SERVER['HTTP_X_FORWARDED_FOR'];
    } else{
        $ipAddr = $_SERVER['REMOTE_ADDR'];
    }
    return $ipAddr;
}

// Generate and store a unique token for password reset
if (empty($_SESSION['token'])) {
    $_SESSION['token'] = bin2hex(random_bytes(32));
}
$token = $_SESSION['token'];

// If the form for generating reset token is submitted
if (isset($_POST['reset_submit'])) {
    $email = mysqli_real_escape_string($con, $_POST['email']);
    
    // Insert the token and email into the database
    $trn_date = date("Y-m-d H:i:s");
    $query = "INSERT into `tokens` (email, token, trn_date) VALUES ('$email', '$token', '$trn_date')";
    $result = mysqli_query($con, $query);
    
    if ($result) {
        // Send the email with the reset token
        try {
            $mail = new PHPMailer(true);
            $mail->isSMTP();
            $mail->Host       = 'smtp.gmail.com';
            $mail->SMTPAuth   = true;
            $mail->Username   = 'your_email@gmail.com'; // Your Gmail username
            $mail->Password   = 'your_password'; // Your Gmail password
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
            $mail->Port       = 587;

            $mail->setFrom('your_email@gmail.com', 'Password Reset');
            $mail->addAddress($email);
            $mail->addReplyTo('resetlink10@gmail.com', 'Password Reset');

            $mail->isHTML(true);
            $mail->Subject = 'Password Reset';
            $mail->Body    = "This is your token number <b>$token</b><h3>https://localhost/password_reset.php</h3>";

            $mail->send();
            echo "<div class='form'><h3>Your reset token has been sent to your email address.</h3></div>";
        } catch (Exception $e) {
            echo "Your reset token could not be sent. Mailer Error: {$mail->ErrorInfo}";
        }
    } else {
        echo "<div class='form'><h3>Your reset token could not be sent, please try again.</h3></div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Login</title>
    <link rel="stylesheet" href="css/style.css" />
    <style>
        .error-message {
            color: red;
        }
    </style>
</head>
<body>
<div class="form">
    <h1>Log In</h1>
    <form action="" method="post" name="login">
        <input type="text" name="username" placeholder="Username" required />
        <input type="password" name="password" placeholder="Password" required />
        <input name="submit" type="submit" value="Login" />
        <?php if (isset($msg)) { ?>
            <div class="error-message"><?php echo $msg; ?></div>
        <?php } ?>
    </form>
    <p>Not registered yet? <a href='registration.php'>Register Here</a></p>
</div>

<div class="form">
    <h1>Reset Password</h1>
    <form action="" method="post">
        <input type="text" name="email" placeholder="Email" required><br>
        <input type="submit" name="reset_submit" value="Generate Reset Token">
    </form>
</div>
</body>
</html>
