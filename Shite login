<?php
session_start();
require('db.php');
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

require 'phpmailer/src/Exception.php';
require 'phpmailer/src/PHPMailer.php';
require 'phpmailer/src/SMTP.php';
require 'vendor/autoload.php';

if (isset($_POST['submit'])) {
    $ip_address = getIpAddr();

    // Check if there are too many failed login attempts within 30 seconds
    $time_limit = time() - 30;
    $query = "SELECT COUNT(*) AS total_count FROM loginlogs WHERE IpAddress='$ip_address' AND TryTime > FROM_UNIXTIME($time_limit)";
    $result = mysqli_query($con, $query);
    $check_login_row = mysqli_fetch_assoc($result);
    $total_count = $check_login_row['total_count'];

	// If more than 3 failed logins attempts, display error message
    if ($total_count >= 3) {
        $msg = "Too many failed login attempts. Please login after 30 seconds.";
    } else {
		// Sanitise username and password inputs
        $username = mysqli_real_escape_string($con, $_POST['username']);
        $password = mysqli_real_escape_string($con, $_POST['password']);

		// Ensures input only contain letters
			if (preg_match('/^[A-Za-z0-9\s]+$/', $username, $password)) {
			
        // Adds the php entities that help to prevent XSS attacks
        $username = htmlentities($username, ENT_QUOTES, 'UTF-8');
        $password = htmlentities($password, ENT_QUOTES, 'UTF-8');

        // Retrieve user data including salt
        $query = "SELECT * FROM `users` WHERE username = ?";
        $stmt = mysqli_prepare($con, $query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            $salt = $row['salt'];
            $hashed_password = hash('sha256', $password . $salt); // Hash password with salt

            // Check if hashed password matches stored hashed password
            if ($hashed_password === $row['password']) {
                $_SESSION['IS_LOGIN'] = 'yes';
                $_SESSION['username'] = $username;

                // Reset login attempts for this IP
                mysqli_query($con, "DELETE FROM loginlogs WHERE IpAddress='$ip_address'");

                header("Location: index.php");
                exit();
            } else {
                // Insert login attempt with timestamp
                mysqli_query($con, "INSERT INTO loginlogs (IpAddress, TryTime) VALUES ('$ip_address', NOW())");

                $msg = "Please enter valid login details.";
            }
        } else {
            $msg = "User does not exist.";
        }
    }
}

// Function to get the client's IP address
function getIpAddr(){
    if (!empty($_SERVER['HTTP_CLIENT_IP'])){
        $ipAddr = $_SERVER['HTTP_CLIENT_IP'];
    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){
        $ipAddr = $_SERVER['HTTP_X_FORWARDED_FOR'];
    } else{
        $ipAddr = $_SERVER['REMOTE_ADDR'];
    }
    return $ipAddr;
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Login</title>
    <link rel="stylesheet" href="css/style.css" />
     <style>
        .error-message {
            color: red;
        }
    </style>
</head>
<body>
<div class="form">
    <h1>Log In</h1>
    <form action="" method="post" name="login">
        <input type="text" name="username" placeholder="Username" required />
        <input type="password" name="password" placeholder="Password" required />
        <input name="submit" type="submit" value="Login" />
        <?php if (isset($msg)) { ?>
            <div class="error-message"><?php echo $msg; ?></div>
        <?php } ?>
    </form>
    <p>Not registered yet? <a href='registration.php'>Register Here</a></p>
</div>

<?php

if (empty($_SESSION['token'])) {
    $_SESSION['token'] = bin2hex(random_bytes(32));
}
$token = $_SESSION['token']

?>

<?php
if (isset($_POST['username'])){
        
	// Sanitise username input
    $username = stripslashes($_POST['username']);
    $username = mysqli_real_escape_string($con,$username); 
    
	// Sanitise email input
    $email = isset($_POST['email']) ? stripslashes($_POST['email']) : ''; // Fix to handle undefined index
    $email = mysqli_real_escape_string($con,$email);
    $trn_date = date("Y-m-d H:i:s");
    
		// SQL query to insert reset token into database
        $query = "INSERT into `tokens` (username, token, email, trn_date) VALUES (?, ?, ?, ?)";
		$stmt = mysqli_prepare($con, $query);
		if ($stmt) {
		mysqli_stmt_bind_param($stmt, "ssss", $username, $token, $email, $trn_date);
		mysqli_stmt_execute($stmt);
		$result = mysqli_stmt_get_result($stmt);
        if($result){
            echo "<div class='form'><h3>Your reset token has been sent.";
        }
    }else{
        echo "Error Preparing statement: " . mysqli_error(con);
    }
}
?>


<div class="form">
    <h1>Reset Password</h1>
    <form action="" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="text" name="email" placeholder="Email" required><br>
        <input type="submit" name="reset_submit" value="Submit">
    </form>

</body>
</html>
<?php
	$emailReset = '';
     if ($_SERVER["REQUEST_METHOD"] == "POST") {
  // collect value of input field
  $emailReset = isset($_POST['email']) ? $_POST['email'] : ''; // Fix to handle undefined index
  if (empty($emailReset)) {
    echo "Name is empty";
  } else {
    echo $emailReset;
  }
}

?>

<?php
$mail = new PHPMailer(true);

try {
    //Server settings
    $mail->SMTPDebug = 0;                                        //Enable verbose debug output
    $mail->isSMTP();                                            //Send using SMTP
    $mail->Host       = 'smtp.gmail.com';                    //Set the SMTP server to send through
    $mail->SMTPAuth   = true;                                   //Enable SMTP authentication
    $mail->Username   = 'wadams6090@gmail.com';                     //SMTP username
    $mail->Password   = 'vytzxolpwhnsqdbf';                               //SMTP password
    $mail->SMTPSecure = 'PHPMailer::ENCRYPTION_STARTTLS';         //Enable implicit TLS encryption
    $mail->Port       = 587;                                    //TCP port to connect to; use 587 if you have set `SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS`

    //Recipient
    $mail->setFrom('wadams6090@gmail.com', 'Password Reset');
    $mail->addAddress("$emailReset", 'User1');                       
    $mail->addReplyTo('resetlink10@gmail.com', 'Password Reset');

    //Content
    $mail->isHTML(true);                                        //Set email format to HTML
    $mail->Subject = 'Password reset';
    $mail->Body    = "This is your token number <b>$token</b><h3>https://localhost/password_reset.php</h3>";
    

    $mail->send();
    echo '<h3>Follow the link to reset your password.</h3>';
} catch (Exception $e) {
    echo "";
}

session_unset();

?>
