<?php
error_reporting(0);
session_start();
require('db.php');
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

require 'phpmailer/src/Exception.php';
require 'phpmailer/src/PHPMailer.php';
require 'phpmailer/src/SMTP.php';

//Load Composer's autoloader
require 'vendor/autoload.php';

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Function to get the client's IP address
function getIpAddr(){
    if (!empty($_SERVER['HTTP_CLIENT_IP'])){
        $ipAddr = $_SERVER['HTTP_CLIENT_IP'];
    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){
        $ipAddr = $_SERVER['HTTP_X_FORWARDED_FOR'];
    } else{
        $ipAddr = $_SERVER['REMOTE_ADDR'];
    }
    return $ipAddr;
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $ip_address = getIpAddr();

    // Check if there are too many failed login attempts within 30 seconds
    $time_limit = time() - 30;
    $query4 = "SELECT COUNT(*) AS total_count FROM loginlogs WHERE IpAddress='$ip_address' AND TryTime > FROM_UNIXTIME($time_limit)";
    $result = mysqli_query($con, $query4);
    $check_login_row = mysqli_fetch_assoc($result);
    $total_count = $check_login_row['total_count'];

    if ($total_count >= 3) {
        $msg = "Too many failed login attempts. Please login after 30 seconds.";
    } else {
        $username = mysqli_real_escape_string($con, $_POST['username']);
        $password = mysqli_real_escape_string($con, $_POST['password']);

        // Checking if user exists in the database
        $query5 = "SELECT * FROM `users` WHERE username='$username'";
        $result = mysqli_query($con, $query5);

        if (mysqli_num_rows($result) == 1) {
            $user_data = mysqli_fetch_assoc($result);
            $stored_password = $user_data['password'];
            $salt = $user_data['salt'];

            // Hash the password with salt
            $hashed_password = hash('sha256', $password . $salt);

            // Compare hashed password from the database with the provided hashed password
            if ($hashed_password === $stored_password) {
                $_SESSION['IS_LOGIN'] = 'yes';
                $_SESSION['username'] = $username;

                // Reset login attempts for this IP
                mysqli_query($con, "DELETE FROM loginlogs WHERE IpAddress='$ip_address'");

                header("Location: index.php");
                exit();
            } else {
                // Insert login attempt with timestamp
                mysqli_query($con, "INSERT INTO loginlogs (IpAddress, TryTime) VALUES ('$ip_address', NOW())");

                $msg = "Please enter valid login details.";
            }
        } else {
            $msg = "User does not exist.";
        }
    }
}

// If email is submitted for password reset
if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($con, $_POST['email']);

    // Generate a token
    $token = generateToken();

    // Insert the token into the database
    $query = "INSERT INTO `tokens` (email, token) VALUES ('$email', '$token')";
    $result = mysqli_query($con, $query);

    if ($result) {
        // Send email with the token
        $mail = new PHPMailer(true);

        try {
            //Server settings
            $mail->SMTPDebug = 0;                      //Enable verbose debug output
            $mail->isSMTP();                                            //Send using SMTP
            $mail->Host       = 'smtp.gmail.com';                     //Set the SMTP server to send through
            $mail->SMTPAuth   = true;                                   //Enable SMTP authentication
            $mail->Username   = 'your_email@gmail.com';                     //SMTP username
            $mail->Password   = 'your_email_password';                               //SMTP password
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;            //Enable implicit TLS encryption
            $mail->Port       = 587;                                    //TCP port to connect to; use 587 if you have set `SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS`

            //Recipients
            $mail->setFrom('your_email@gmail.com', 'Password Reset');
            $mail->addAddress($email);     //Add a recipient

            //Content
            $mail->isHTML(true);                                  //Set email format to HTML
            $mail->Subject = 'Password Reset Token';
            $mail->Body    = "Here is your password reset token: <b>$token</b>";

            $mail->send();
            $msg = "Password reset token has been sent to your email.";
        } catch (Exception $e) {
            $msg = "Error: Password reset token could not be sent. Mailer Error: {$mail->ErrorInfo}";
        }
    } else {
        $msg = "Error: Failed to generate token.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Login</title>
    <link rel="stylesheet" href="css/style.css" />
    <style>
        .error-message {
            color: red;
        }
    </style>
</head>
<body>
<div class="form">
    <h1>Log In</h1>
    <form action="" method="post" name="login">
        <input type="text" name="username" placeholder="Username" required />
        <input type="password" name="password" placeholder="Password" required />
        <input name="submit" type="submit" value="Login" />
        <?php if (isset($msg)) { ?>
            <div class="error-message"><?php echo $msg; ?></div>
        <?php } ?>
    </form>
    <form action="" method="post" name="forgot_password">
        <input type="text" name="email" placeholder="Email" required />
        <input name="reset_password" type="submit" value="Forgot Password" />
    </form>
    <p>Not registered yet? <a href='registration.php'>Register Here</a></p>
</div>
</body>
</html>
